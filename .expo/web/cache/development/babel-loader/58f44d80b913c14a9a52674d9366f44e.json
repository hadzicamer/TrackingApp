{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport createDataContext from \"./createDataContext\";\nimport trackerApi from \"../API/tracker\";\nimport { navigate } from \"../navigationRef\";\n\nvar authReducer = function authReducer(state, action) {\n  switch (action.type) {\n    case 'signup':\n      return {\n        errorMessage: '',\n        token: action.payload\n      };\n\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar signup = function signup(dispatch) {\n  return function _callee(_ref) {\n    var email, password, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(trackerApi.post('/signup', {\n              email: email,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', response.data.token));\n\n          case 7:\n            dispatch({\n              type: 'Signup',\n              payload: response.data.token\n            });\n            navigate('TrackList');\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: 'add_error',\n              payload: 'Mistake, something went wrong!'\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n};\n\nvar signin = function signin(dispatch) {\n  return function (email, password) {};\n};\n\nvar signout = function signout(dispatch) {\n  return function () {};\n};\n\nvar _createDataContext = createDataContext(authReducer, {\n  signin: signin,\n  signout: signout,\n  signup: signup\n}, {\n  token: null,\n  errorMessage: ''\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["C:/Users/Amer/Documents/ReactNative/tracks/src/context/AuthContext.js"],"names":["createDataContext","trackerApi","navigate","authReducer","state","action","type","errorMessage","token","payload","signup","dispatch","email","password","post","response","AsyncStorage","setItem","data","signin","signout","Provider","Context"],"mappings":";;;;;;;;AACA,OAAOA,iBAAP;AACA,OAAOC,UAAP;AACA,SAASC,QAAT;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AAAEC,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAAlC,OAAP;;AACJ,SAAK,WAAL;AACI,6CAAYL,KAAZ;AAAmBG,QAAAA,YAAY,EAAEF,MAAM,CAACI;AAAxC;;AACJ;AACI,aAAOL,KAAP;AANR;AASH,CAVD;;AAaA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAAAC,QAAQ;AAAA,SACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,QAASA,KAAT,EAAgBC,QAAhB,QAAgBA,QAAhB;AAAA;AAAA;AAAA,6CAEmCZ,UAAU,CAACa,IAAX,CAAgB,SAAhB,EAA2B;AAAEF,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,QAAQ,EAARA;AAAT,aAA3B,CAFnC;;AAAA;AAEkBE,YAAAA,QAFlB;AAAA;AAAA,6CAGkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACG,IAAT,CAAcV,KAA5C,CAHlB;;AAAA;AAIYG,YAAAA,QAAQ,CAAC;AAAEL,cAAAA,IAAI,EAAE,QAAR;AAAkBG,cAAAA,OAAO,EAAEM,QAAQ,CAACG,IAAT,CAAcV;AAAzC,aAAD,CAAR;AACAN,YAAAA,QAAQ,CAAC,WAAD,CAAR;AALZ;AAAA;;AAAA;AAAA;AAAA;AAQYS,YAAAA,QAAQ,CAAC;AAAEL,cAAAA,IAAI,EAAE,WAAR;AAAqBG,cAAAA,OAAO,EAAE;AAA9B,aAAD,CAAR;;AARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADuB;AAAA,CAAvB;;AAaA,IAAMU,MAAM,GAAG,SAATA,MAAS,CAACR,QAAD,EAAc;AACzB,SAAO,UAACC,KAAD,EAAQC,QAAR,EAAqB,CAE3B,CAFD;AAGH,CAJD;;AAMA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACT,QAAD,EAAc;AAC1B,SAAO,YAAM,CAEZ,CAFD;AAGH,CAJD;;yBAMqCX,iBAAiB,CAClDG,WADkD,EAElD;AAAEgB,EAAAA,MAAM,EAANA,MAAF;AAAUC,EAAAA,OAAO,EAAPA,OAAV;AAAmBV,EAAAA,MAAM,EAANA;AAAnB,CAFkD,EAGlD;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeD,EAAAA,YAAY,EAAE;AAA7B,CAHkD,C;IAAvCc,Q,sBAAAA,Q;IAAUC,O,sBAAAA,O","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nimport createDataContext from './createDataContext';\r\nimport trackerApi from '../API/tracker'\r\nimport { navigate } from '../navigationRef';\r\n\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'signup':\r\n            return { errorMessage: '', token: action.payload };\r\n        case 'add_error':\r\n            return { ...state, errorMessage: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nconst signup = dispatch =>\r\nasync ({ email, password }) => {\r\n        try {\r\n            const response = await trackerApi.post('/signup', { email, password });\r\n            await AsyncStorage.setItem('token', response.data.token);\r\n            dispatch({ type: 'Signup', payload: response.data.token });\r\n            navigate('TrackList');\r\n\r\n        } catch (err) {\r\n            dispatch({ type: 'add_error', payload: 'Mistake, something went wrong!' })\r\n        }\r\n    };\r\n\r\nconst signin = (dispatch) => {\r\n    return (email, password) => {\r\n\r\n    };\r\n};\r\n\r\nconst signout = (dispatch) => {\r\n    return () => {\r\n\r\n    };\r\n};\r\n\r\nexport const { Provider, Context } = createDataContext(\r\n    authReducer,\r\n    { signin, signout, signup },\r\n    { token: null, errorMessage: '' }\r\n);"]},"metadata":{},"sourceType":"module"}